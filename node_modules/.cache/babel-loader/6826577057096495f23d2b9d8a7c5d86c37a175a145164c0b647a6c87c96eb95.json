{"ast":null,"code":"var _jsxFileName = \"/Users/273481/Desktop/project/wid/samples/src/common/storybook/storyWithTranslationFromMessages.tsx\";\nimport { IntlProvider } from 'react-intl';\nimport { Locale } from '../../types/locale';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction storyWithTranslationFromMessages(localeOverride, messagesByLangcode) {\n  return (Story, {\n    globals: {\n      locale\n    }\n  }) => {\n    const requestedLocale = localeOverride || locale;\n    return /*#__PURE__*/_jsxDEV(IntlProvider, {\n      locale: requestedLocale || 'en',\n      messages: messagesByLangcode[requestedLocale || Locale.EN],\n      children: /*#__PURE__*/_jsxDEV(Story, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  };\n}\nexport default storyWithTranslationFromMessages;","map":{"version":3,"names":["IntlProvider","Locale","jsxDEV","_jsxDEV","storyWithTranslationFromMessages","localeOverride","messagesByLangcode","Story","globals","locale","requestedLocale","messages","EN","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/273481/Desktop/project/wid/samples/src/common/storybook/storyWithTranslationFromMessages.tsx"],"sourcesContent":["import { IntlProvider } from 'react-intl';\n\nimport { ReactFramework } from '@storybook/react';\nimport { ReactElement } from 'react';\nimport { Locale } from '../../types/locale';\nimport { Args, DecoratorFunction } from '@storybook/csf';\n\nexport type MessagesByCode = Record<\n  Locale,\n  Record<string, { type: number; value: string }[]>\n>;\n\nfunction storyWithTranslationFromMessages<TArgs extends Args = Args>(\n  localeOverride: Locale | void,\n  messagesByLangcode: MessagesByCode,\n): DecoratorFunction<ReactFramework, TArgs> {\n  return (Story, { globals: { locale } }): ReactElement => {\n    const requestedLocale = (localeOverride || locale) as Locale | void;\n    return (\n      <IntlProvider\n        locale={requestedLocale || 'en'}\n        messages={messagesByLangcode[requestedLocale || Locale.EN]}\n      >\n        <Story />\n      </IntlProvider>\n    );\n  };\n}\n\nexport default storyWithTranslationFromMessages;\n"],"mappings":";AAAA,SAASA,YAAY,QAAQ,YAAY;AAIzC,SAASC,MAAM,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ5C,SAASC,gCAAgCA,CACvCC,cAA6B,EAC7BC,kBAAkC,EACQ;EAC1C,OAAO,CAACC,KAAK,EAAE;IAAEC,OAAO,EAAE;MAAEC;IAAO;EAAE,CAAC,KAAmB;IACvD,MAAMC,eAAe,GAAIL,cAAc,IAAII,MAAwB;IACnE,oBACEN,OAAA,CAACH,YAAY;MACXS,MAAM,EAAEC,eAAe,IAAI,IAAK;MAChCC,QAAQ,EAAEL,kBAAkB,CAACI,eAAe,IAAIT,MAAM,CAACW,EAAE,CAAE;MAAAC,QAAA,eAE3DV,OAAA,CAACI,KAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAEnB,CAAC;AACH;AAEA,eAAeb,gCAAgC"},"metadata":{},"sourceType":"module","externalDependencies":[]}